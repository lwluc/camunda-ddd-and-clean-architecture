name: Build & Push (Docker)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  loan-agreement-build:
    name: Build Loan Agreement JAR
    runs-on: ubuntu-22.04
    env:
      repo: lwluc/camunda-ddd-and-clean-architecture
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'
      - name: Maven Package
        run: mvn clean package -pl loan-agreement -am
      - uses: actions/upload-artifact@v4
        with:
          name: loan-agreement
          path: loan-agreement/target/loan-agreement.jar

  loan-agreement-publish:
    name: Push Loan Agreement Docker image
    runs-on: ubuntu-22.04
    needs: [ loan-agreement-build ]
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./loan-agreement
    env:
      repo: lwluc/camunda-ddd-and-clean-architecture
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'
      - uses: actions/download-artifact@v4
        with:
          name: loan-agreement
          path: target
      - name: Display structure of downloaded files
        run: ls -R target
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build Docker image
        run: docker build -t ${{env.repo}}-loan-agreement .
      - name: Publish Docker image
        run: docker push ${{env.repo}}-loan-agreement

  recommendation-build:
    name: Build Recommendation JAR
    runs-on: ubuntu-22.04
    env:
      repo: lwluc/camunda-ddd-and-clean-architecture
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'
      - name: Maven Package
        run: mvn clean package -pl recommendation -am
      - uses: actions/upload-artifact@v4
        with:
          name: recommendation
          path: recommendation/target/recommendation.jar

  recommendation-publish:
    name: Push Recommendation Docker Image
    runs-on: ubuntu-22.04
    needs: [ recommendation-build ]
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./recommendation
    env:
      repo: lwluc/camunda-ddd-and-clean-architecture
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'
      - uses: actions/download-artifact@v4
        with:
          name: recommendation
          path: target
      - name: Display structure of downloaded files
        run: ls -R target
      - name: Move to Directory
        run: mkdir target && mv recommendation.jar ./target/recommendation.jar
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build Docker image
        run: docker build -t ${{env.repo}}-recommendation .
      - name: Publish Docker image
        run: docker push ${{env.repo}}-recommendation

  custom-connector-build:
    name: Build Custom Connector JAR
    runs-on: ubuntu-22.04
    env:
      repo: lwluc/camunda-ddd-and-clean-architecture
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'
      - name: Maven Package
        run: mvn clean package -pl custom-notification-connector -am
      - uses: actions/upload-artifact@v4
        with:
          name: custom-notification-connector
          path: custom-notification-connector/target/custom-notification-connector.jar

  custom-connector-publish:
    name: Push Custom Connector Docker Image
    runs-on: ubuntu-22.04
    needs: [ custom-connector-build ]
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./custom-notification-connector
    env:
      repo: lwluc/camunda-ddd-and-clean-architecture
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'
      - uses: actions/download-artifact@v4
        with:
          name: custom-notification-connector
          path: target
      - name: Display structure of downloaded files
        run: ls -R target
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build Docker image
        run: docker build -t ${{env.repo}}-custom-notification-connector .
      - name: Publish Docker image
        run: docker push ${{env.repo}}-custom-notification-connector