name: Build & Push (Docker)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, 'camunda-8' ]

jobs:
  loan-agreement-build:
    name: Build Loan Agreement JAR
    runs-on: ubuntu-22.04
    env:
      repo: lwluc/camunda-ddd-and-clean-architecture
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Maven Package
        run: mvn clean package -pl loan-agreement -am
      - uses: actions/upload-artifact@v1
        with:
          name: loan-agreement
          path: loan-agreement/target/loan-agreement.jar

  loan-agreement-publish:
    name: Push Loan Agreement Docker image
    runs-on: ubuntu-22.04
    needs: [ loan-agreement-build ]
    defaults:
      run:
        working-directory: ./loan-agreement
    env:
      repo: lwluc/camunda-ddd-and-clean-architecture
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - uses: actions/download-artifact@v1
        with:
          name: loan-agreement
      - name: Move to Directory
        run: mkdir target && mv loan-agreement.jar ./target/loan-agreement.jar
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p '${{ secrets.DOCKER_TOKEN }}'
      - name: Build Docker image
        run: docker build -t ${{env.repo}}-loan-agreement-camunda-8 .
      - name: Publish Docker image
        run: docker push ${{env.repo}}-loan-agreement-camunda-8

  recommendation-build:
    name: Build Recommendation JAR
    runs-on: ubuntu-22.04
    env:
      repo: lwluc/camunda-ddd-and-clean-architecture
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Maven Package
        run: mvn clean package -pl recommendation -am
      - uses: actions/upload-artifact@v1
        with:
          name: recommendation
          path: recommendation/target/recommendation.jar

  recommendation-publish:
    name: Push Recommendation Docker Image
    runs-on: ubuntu-22.04
    needs: [ recommendation-build ]
    defaults:
      run:
        working-directory: ./recommendation
    env:
      repo: lwluc/camunda-ddd-and-clean-architecture
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - uses: actions/download-artifact@v1
        with:
          name: recommendation
      - name: Move to Directory
        run: mkdir target && mv recommendation.jar ./target/recommendation.jar
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p '${{ secrets.DOCKER_TOKEN }}'
      - name: Build Docker image
        run: docker build -t ${{env.repo}}-recommendation-camunda-8 .
      - name: Publish Docker image
        run: docker push ${{env.repo}}-recommendation-camunda-8

  custom-connector-build:
    name: Build Custom Connector JAR
    runs-on: ubuntu-22.04
    env:
      repo: lwluc/camunda-ddd-and-clean-architecture
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Maven Package
        run: mvn clean package -pl custom-notification-connector -am
      - uses: actions/upload-artifact@v1
        with:
          name: custom-notification-connector
          path: custom-notification-connector/target/custom-notification-connector.jar

  custom-connector-publish:
    name: Push Custom Connector Docker Image
    runs-on: ubuntu-22.04
    needs: [ custom-connector-build ]
    defaults:
      run:
        working-directory: ./custom-notification-connector
    env:
      repo: lwluc/camunda-ddd-and-clean-architecture
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - uses: actions/download-artifact@v1
        with:
          name: custom-notification-connector
      - name: Move to Directory
        run: mkdir target && mv custom-notification-connector.jar ./target/custom-notification-connector.jar
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p '${{ secrets.DOCKER_TOKEN }}'
      - name: Build Docker image
        run: docker build -t ${{env.repo}}-custom-notification-connector-camunda-8 .
      - name: Publish Docker image
        run: docker push ${{env.repo}}-custom-notification-connector-camunda-8